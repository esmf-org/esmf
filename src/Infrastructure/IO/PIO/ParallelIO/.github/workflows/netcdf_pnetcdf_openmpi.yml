name: netcdf_pnetcdf_openmpi

on:
  push:
    branches: [ maintodo ]
  pull_request:
    branches: [ maintodo ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
#      CPPFLAGS: "-I${GITHUB_WORKSPACE}/openmpi/include -I${GITHUB_WORKSPACE}/hdf5/include -I${GITHUB_WORKSPACE}/netcdf/include -I${GITHUB_WORKSPACE}/pnetcdf/include"
#      LDFLAGS: "-L${GITHUB_WORKSPACE}/openmpi/lib -L${GITHUB_WORKSPACE}/hdf5/lib -L${GITHUB_WORKSPACE}/netcdf/lib -L${GITHUB_WORKSPACE}/pnetcdf/lib"
      NETCDF_C_VERSION: v4.9.2
      NETCDF_FORTRAN_VERSION: v4.6.1
      OPENMPI_VERSION: v4.1.5
      PNETCDF_VERSION: checkpoint.1.12.3
      HDF5_VERSION: hdf5_1_12_2
      FCFLAGS: "-fallow-argument-mismatch"
      FFLAGS: "-fallow-argument-mismatch"
    steps:
    - uses: actions/checkout@v3
    - name: Installs
      run: |
        sudo apt-get install doxygen graphviz wget gfortran libjpeg-dev libz-dev
    - name: cache-openmpi
      id: cache-openmpi
      uses: actions/cache@v3
      with:
        path: ~/work/ParallelIO/ParallelIO/openmpi
        key: openmpi-${{ runner.os }}-${{ env.OPENMPI_VERSION }}

    - name: build-openmpi
      if: steps.cache-openmpi.outputs.cache-hit != 'true'
      uses: ./.github/actions/buildopenmpi
      with:
        install_prefix: ${GITHUB_WORKSPACE}/openmpi
        openmpi_version: ${{ env.OPENMPI_VERSION }}

    - name: cache-hdf5
      id: cache-hdf5
      uses: actions/cache@v3
      with:
        path: ~/work/ParallelIO/ParallelIO/hdf5
        key: hdf5-${{ runner.os }}-${{ env.HDF5_VERSION }}-openmpi-${{ env.OPENMPI_VERSION }}

    - name: build-hdf5
      if: steps.cache-hdf5.outputs.cache-hit != 'true'
      uses: ./.github/actions/buildhdf5
      with:
        install_prefix: ${GITHUB_WORKSPACE}/hdf5
        enable_parallel: True
        hdf5_version: ${{ env.HDF5_VERSION }}
        mpi_path: ${GITHUB_WORKSPACE}/openmpi

    - name: cache-netcdf
      id: cache-netcdf
      uses: actions/cache@v3
      with:
        path: ~/work/ParallelIO/ParallelIO/netcdf
        key: netcdf-${{ runner.os }}-${{ env.NETCDF_C_VERSION }}-${{ env.NETCDF_FORTRAN_VERSION }}-openmpi-${{ env.OPENMPI_VERSION }}-hdf5-${{ env.HDF5_VERSION }}


    - name: build-netcdf-c
      if: steps.cache-netcdf.outputs.cache-hit != 'true'
      uses: ./.github/actions/buildnetcdf
      with:
        netcdf_version: ${{ env.NETCDF_C_VERSION }}
        install_prefix: ${GITHUB_WORKSPACE}/netcdf

#    - name: Setup tmate session
#      if: ${{ failure() }}
#      uses: mxschmitt/action-tmate@v3

    - name: Build NetCDF Fortran
      if: steps.cache-netcdf.outputs.cache-hit != 'true'
      uses: ./.github/actions/buildnetcdff
      with:
        netcdf_fortran_version: ${{ env.NETCDF_FORTRAN_VERSION }}
        install_prefix: ${GITHUB_WORKSPACE}/netcdf
        netcdf_c_path: ${GITHUB_WORKSPACE}/netcdf

    # - name: cache-pnetcdf
    #   id: cache-pnetcdf
    #   uses: actions/cache@v3
    #   with:
    #     path: ~/pnetcdf
    #     key: pnetcdf-${{ runner.os }}-${{ env.PNETCDF_VERSION }}-openmpi-${{ env.OPENMPI_VERSION_MAJOR }}.${{ env.OPENMPI_VERSION_PATCH }}

    # - name: Build PNetCDF
    #   if: steps.cache-pnetcdf.outputs.cache-hit != 'true'
    #   uses: ./.github/actions/buildpnetcdf
    #   with:
    #     pnetcdf_version: ${{ env.PNETCDF_VERSION }}
    #     install_prefix: pnetcdf

    # - name: Build ParallelIO with autotools
    #   uses: ./.github/actions/parallelio_autotools
    #   with:
    #     enable_fortran: True
    #     with_mpiexec: 'mpiexec --oversubscribe'
    #     parallelio_version: ${{ env.GITHUB_SHA }}
    # - name: make check
    #   run: |
    #     cd ${GITHUB_WORKSPACE}/parallelio-src
    #     make -j check
    #     make distclean
    # - name: cmake build
    #   uses: ./.github/actions/parallelio_cmake
    #   with:
    #     parallelio_version: ${{ env.GITHUB_SHA }}
    #     with_pnetcdf: pnetcdf
    #     with_netcdf: netcdf
    #     with_netcdff: netcdf
    #     enable_fortran: True
    #     install_prefix: parallelio
    #     with_mpiexec: "${{ env.GITHUB_WORKSPACE }}/openmpi/bin/mpiexec --oversubscribe"
    # - name: run tests
    #   run: |
    #     pushd ${GITHUB_WORKSPACE}/build
    #     make tests VERBOSE=1
    #     ctest -VV
    #     popd
